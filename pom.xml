<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.nicolalopatriello</groupId>
    <artifactId>thesis</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>Thesis</name>
    <description>
        Thesis project of Nicola Lopatriello
    </description>
    <url/>
    <inceptionYear>2021</inceptionYear>
    <licenses/>

    <modules>
        <module>thesis-worker</module>
    </modules>

    <scm/>

    <issueManagement>
        <url>https://gitlab.gfm.cloud/vodafone/kirk/kirk/issues</url>
        <system>GitLab</system>
    </issueManagement>

    <mailingLists/>

    <developers>
        <developer>
            <name>Nicola Lopatriello</name>
            <email>nicola.lopatriello@studenti.unimi.it</email>
        </developer>
    </developers>
    <ciManagement/>
    <repositories/>
    <pluginRepositories/>
    <distributionManagement>
        <repository>
            <id>gfmi-maven</id>
            <name>gfmi-maven</name>
            <url>https://mvn.gfm.cloud/artifactory/gfmi-maven</url>
        </repository>
        <snapshotRepository>
            <id>gfmi-snapshot-maven</id>
            <name>gfmi-snapshot-maven</name>
            <url>https://mvn.gfm.cloud/artifactory/gfmi-snapshot-maven</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>


        <profile>
            <id>unit-test</id>
            <properties>
                <dockerfile.skip>true</dockerfile.skip>
                <jacoco.skip>false</jacoco.skip>
                <skipTests>false</skipTests>
            </properties>
            <modules>
                <module>thesis-common</module>
                <module>thesis-core</module>
            </modules>
        </profile>


        <profile>
            <id>build</id>
            <properties>
                <dockerfile.skip>false</dockerfile.skip>
                <jacoco.skip>false</jacoco.skip>
                <skipTests>false</skipTests>
            </properties>
            <modules>
                <module>thesis-core</module>
                <module>thesis-common</module>
            <!--    <module>thesis-ui</module>-->
            </modules>
        </profile>

        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <dockerfile.skip>true</dockerfile.skip>
                <jacoco.skip>true</jacoco.skip>
                <skipTests>false</skipTests>
            </properties>
            <modules>
                <module>thesis-core</module>
                <module>thesis-common</module>
            </modules>
        </profile>

        <profile>
            <id>release</id>
            <properties>
                <dockerfile.skip>false</dockerfile.skip>
                <jacoco.skip>true</jacoco.skip>
                <skipTests>true</skipTests>
            </properties>
            <modules>
                <module>thesis-core</module>
                <module>thesis-common</module>
            </modules>
        </profile>

    </profiles>

    <properties>

        <revision>${version.abbr}.${git.commit}.${ci.pipelineId}.${ci.pipelineIdProjectScoped}</revision>

        <version.abbr>${version.major}.${version.minor}.${version.patch}</version.abbr>
        <version.major>1</version.major>
        <version.minor>0</version.minor>
        <version.patch>0</version.patch>

        <!-- Git Commit SHA, it is passed with variables overriding (es mvn package -Dgit.commit= .. ) -->
        <git.commit/>
        <!--    GitLab CI Variables -->
        <!-- The unique id of the current pipeline that GitLab CI uses internally-->
        <ci.pipelineId/>
        <!--        The unique id of the current pipeline scoped to project-->
        <ci.pipelineIdProjectScoped/>

        <dockerfile.skip>true</dockerfile.skip>
        <jacoco.skip>true</jacoco.skip>

        <docker.repo>nik90</docker.repo>
        <docker.username/>
        <docker.password/>
        <docker.tagname>${docker.repo}/${project.artifactId}</docker.tagname>

        <compilationMode>local</compilationMode>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <jjwt.version>0.7.0</jjwt.version>

        <protobuf.version>3.7.1</protobuf.version>
        <groovy.version>3.0.0-rc-3</groovy.version>
        <apachepoi.version>4.1.1</apachepoi.version>

    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>

            <dependency>
                <groupId>com.gfmi</groupId>
                <artifactId>net</artifactId>
                <version>0.1.2</version>
            </dependency>

            <dependency>
                <groupId>net.objecthunter</groupId>
                <artifactId>exp4j</artifactId>
                <version>0.4.8</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>5.11.1.202105131744-r</version>
            </dependency>



            <!-- Databases -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <!--            <version>1.4.193</version>-->
                <version>1.4.200</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>42.1.3</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>javax.activation-api</artifactId>
            <version>1.2.0</version>
        </dependency>

        <!-- LOG -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <!-- Swagger -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
            <version>1.5.21</version>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-servlet</artifactId>
            <version>1.5.21</version>
        </dependency>


        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>3.0.1</version>
        </dependency>


        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.12</version>
        </dependency>


        <!-- TEST -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.4.0</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>target/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.5</version>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.3</version>
                <configuration>
                    <repository>${docker.tagname}</repository>
                    <tag>${project.version}</tag>
                    <username>${docker.username}</username>
                    <password>${docker.password}</password>
                    <buildArgs>
                    </buildArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <configuration>
                    <skip>${jacoco.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Swagger -->
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.7</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>it.nicolalopatriello.core</location>
                            </locations>
                            <!--                            <schemes>http,https</schemes>-->
                            <info>
                                <title>Kirk</title>
                                <description>
                                    API REST documentation
                                </description>
                                <version>${revision}</version>
                            </info>
                            <swaggerApiReader>com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader
                            </swaggerApiReader>
                            <!--                            <swaggerExtensions>-->
                            <!--                                com.github.kongchen.swagger.docgen.spring.SpringSwaggerExtension-->
                            <!--                            </swaggerExtensions>-->
                            <swaggerDirectory>${project.basedir}/target/docs-swagger/swagger</swaggerDirectory>
                            <swaggerFileName>swagger</swaggerFileName>
                            <outputFormats>yaml</outputFormats>
                            <attachSwaggerArtifact>true</attachSwaggerArtifact>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>
